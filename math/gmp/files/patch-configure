--- configure.orig	2022-11-17 12:00:46.308994000 +0000
+++ configure	2022-11-17 12:09:40.609220000 +0000
@@ -1550,8 +1550,8 @@
               User-defined run-time library search path.
   M4          m4 macro processor
   YACC        The `Yet Another Compiler Compiler' implementation to use.
-              Defaults to the first program found out of: `bison -y', `byacc',
-              `yacc'.
+              Defaults to the first program found out of: `bison -o y.tab.c',
+              `byacc', `yacc'.
   YFLAGS      The list of arguments that will be passed by default to $YACC.
               This script will default YFLAGS to the empty string to avoid a
               default value of `-d' given by some make applications.
@@ -4257,7 +4257,6 @@
     gcc_64_cflags_optlist="arch tune"
     gcc_testlist="gcc-arm-umodsi"
     gcc_64_testlist=""
-    CALLING_CONVENTIONS_OBJS='arm32call.lo arm32check.lo'
     CALLING_CONVENTIONS_OBJS_64=""
     cclist_64="gcc cc"
     any_32_testlist="sizeof-void*-4"
@@ -4408,7 +4407,16 @@
 	gcc_cflags_neon="-mfpu=neon"
 	gcc_cflags_tune="-mtune=xgene1"
 	;;
+      aarch64c)
+        abilist="purecap"
+	path_64="arm64"
+	gcc_cflags_arch="-march=morello+c64"
+	gcc_cflags_neon=""
+	gcc_cflags_tune=""
+        gmp_asm_syntax_testing=no
+	;;
       aarch64*)
+        CALLING_CONVENTIONS_OBJS='arm32call.lo arm32check.lo'
         abilist="64 32"
 	path="arm/v7a/cora15/neon arm/neon arm/v7a/cora15 arm/v6t2 arm/v6 arm/v5 arm"
 	path_64="arm64"
@@ -27748,7 +27756,7 @@
 else
   WITH_READLINE_01=0
 fi
-for ac_prog in 'bison -y' byacc
+for ac_prog in 'bison -o y.tab.c' byacc
 do
   # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
